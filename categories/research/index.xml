<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Research on Xiaoyu Jiang | 姜小宇</title>
    <link>https://psy.afark.cn/categories/research/</link>
    <description>Recent content in Research on Xiaoyu Jiang | 姜小宇</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 05 Sep 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://psy.afark.cn/categories/research/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Views about learning Psychtoolbox3</title>
      <link>https://psy.afark.cn/post/ptbstudy/</link>
      <pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://psy.afark.cn/post/ptbstudy/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;没有什么鸡血要干，没有那么多时间躺平。有的只是做好想做的事情。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;8月31日，开始看两本 PTB 教材：《心理学研究方法-基于 MATLAB 和 Psychtoolbox》和《Psychtoolbox 工具箱及 MATLAB 编程实例》。这也是国内仅有的两本中文PTB教材。由此也可见 PTB 是个小众心理实验编程工具，并且正🈶被Psychopy （源自同一团队）取而代之的趋势。&lt;/p&gt;&#xA;&lt;p&gt;但，并不是说现在学 PTB 就是49年投国军了。首先，PTB的功能更全面灵活，其次，无论是上个月写程序，还是这几天系统学习，都感觉到 PTB 语法的友善。其三，PTB3拥有多年的发展史，对于很多功能的实现，网上都有现成的脚本，稍微修改就能用到自己的实验中。至于性能上的差别，因为我不是程序员，所以还没对三者进行过比较（PTB、Psychopy、E-prime）。&lt;/p&gt;&#xA;&lt;p&gt;而，对于这两本教材。怎么说呢，感慨就已经不是各有优点的问题了。两个都没有讲到自己找的东西。心理学实验编程的逻辑，比如，开始是什么样，中间要有什么，结束时数据保存为什么格式。还有实验设计的注意事项，比如，怎么编程可以让实验的运行效率更快，什么操作会损害时间精度应该避免等。&lt;/p&gt;&#xA;&lt;p&gt;前一本书稍微提了下实验设计的逻辑：1) 设计实验试次;2) 编写实验刺激; 3) 呈现实验刺激; 4) 输出实验结果。但在其后的章节中，是一点都没有详谈的意思啊。&lt;/p&gt;&#xA;&lt;p&gt;而后一本书，是苏州大学冯成志老师编著的一本书。是的，我用得是‘编著’两个字。里面很大的篇幅是对PTB帮助文档的筛选翻译，有用，但显然不是读者想从教材中看到的东西。读者，至少我这个读者想看到更多的是，作者使用这些函数的经验，而不是中文解释，毕竟到这个层次了，大家的英文水平都足以看懂帮助文档了。&lt;/p&gt;&#xA;&lt;p&gt;幸好的是，冯老师这本书在第九章之后，就是正菜了。个人拙见，冯老师完全可以砍掉前面几章，取而代之，在第九章的中的编程实例中佐以更详细的注释。让读者得以统一的学习实验逻辑，可代码实现。而不会被淹没在前几章的函数海洋中。&lt;/p&gt;&#xA;&lt;p&gt;当然，书已经出来那么多年了，改是不可能改了，我们只能适应。我建议读者在看完前四章之后，就可以跳到第九章，结合 MATLAB 和 PTB 自带的帮助文档，跟着读一遍。就能看到编程能力的显著增加。&lt;/p&gt;&#xA;&lt;p&gt;无论如何，冯老师这本书是国内PTB学习者绕不过的一本书，加油啃吧，早啃完，早做自己的实验。&lt;/p&gt;</description>
    </item>
    <item>
      <title>August summary and future work tone</title>
      <link>https://psy.afark.cn/post/august/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://psy.afark.cn/post/august/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;极大的失望啊，自从上次说过每周三进行一次详细回顾。就再也没打开过日记本了。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;过去一个月，魔幻般的生活。&lt;/p&gt;&#xA;&lt;!--首先，感情上，被拉黑，冷战，合租，然后彻底断绝关系。，过山车一般的感情生活。其实回顾一下，自从在一起之后，两个人就没有好好相处过超过一个星期。完全靠各种活动和吃饭聚在一起的。疲惫，且毫无必要。--&gt;&#xA;&lt;p&gt;然后，花了一点时间，把博客搭建起来了。这次是带有目的的，其中一个就是作为自我展示的地方。为以后读博或出去交流提供一个别人了解自己的窗口。&lt;/p&gt;&#xA;&lt;p&gt;准确来说，八月好像就干了这些。&lt;/p&gt;&#xA;&lt;p&gt;然后，给实验室的电脑装上了 Arch Linux。去了熊猫基地，看到了心喜的小浣熊。在最后两天编写了数据分析程序（未完成）。&lt;/p&gt;&#xA;&lt;!--和老师确定了留在川师读博士。--&gt;&#xA;&lt;p&gt;对了，还看完了《城堡》《黑客与画家》。还没看完《深度工作》，但深受启发。专注工作，刻意练习，快速掌握复杂技能的能力，做出成果，形成规模的重要性。&lt;/p&gt;&#xA;&lt;p&gt;《深度工作》最有启发的一点就是，只有成果才能代表一个人的才智。如果一个人什么都没做出来，然后说自己很有能力，谁会信呢？&lt;/p&gt;&#xA;&lt;p&gt;但又一个把不能忽视的事实，就是我的记忆力相当的差，特别是情绪记忆。如果不做出成果，或者形成肌肉记忆，我甚至连过去发生了什么都不会记得。然后，注意力也很容易受干扰，经常被不重要或者其他事情吸引，不能坚持在一件事情上直到做出成果。&lt;/p&gt;&#xA;&lt;p&gt;基于此，一定要在显眼的地方写明每天要做的事情，在这些事情完成前不允许做其他事情，无论它有多么重要。如此重复，才能出成果。有些是坚持半年以上才能看出效果的（如英语、），有些是需要短期内专注做完的（如编程、写作），有些是对身体健康非常重要但一年以上才有效果的（如健身，读书）。但这些有个共同点，那就是一定要做，并且在完成前不能中断。即，一天只做必须做得事情，其他的都滚开。&lt;/p&gt;&#xA;&lt;p&gt;另外，要保持对知识的渴望。要怀着不能让任何一本书（一项技能）活到第二天的狠劲去干。拖拖拉拉的像什么样子。&lt;/p&gt;&#xA;&lt;p&gt;有什么事是必须做的呢，编程和数据分析能力的提升，英语，综述，锻炼。这些永远出现在计划表上的事情，也确实是最重要，能持续带来好处的东西。&lt;/p&gt;&#xA;&lt;p&gt;具体来说就是，编程是不断写程序（看书➡️复写经典实验➡️写博文➡️提供服务）、数据分析是不断分析数据（看书➡️分析自己的数据➡️分析公开数据➡️写博文➡️提供服务），英语是不断输出（背单词➡️练音标➡️背课文➡️复述➡️写作➡️说），锻炼就是不断升级。编程、数据分析、和英语都是服务于做科研的，之间不能割裂。比如，编程和数据分析在看完中文教程后，就要去看英文材料，并且在研究领域内选择。&lt;/p&gt;&#xA;&lt;p&gt;深度工作提出的一个重要原则就是“专注”，做到这点不难，怀着对知识的渴望即可。并且，每次做都要出成果才停止。比如，看文献就要写出一个片段才能停止，编程就要写出一个能运行的程序才能停止，数据分析就要分析出结果，背文章就要背下来才能停。即任务开始前定下一个目标，然后怀着不完成不吃饭不睡觉的心态去干。除此之外，每次任务完成都要写个总结放在博客中。这样才算真正完成。&lt;/p&gt;&#xA;&lt;p&gt;当然，这样状态去干，肯定要对自己有所奖励。每次任务完成后，都可以休息半天，然后去锻炼，而后奖励自己一顿大餐或旅行（任务重要性与完成情况决定价钱与距离）。奖励定下来了，干到恶心也要做下去。&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Arch Linux PC</title>
      <link>https://psy.afark.cn/post/restart/</link>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://psy.afark.cn/post/restart/</guid>
      <description>&lt;div id=&#34;引言&#34; class=&#34;section level1&#34;&gt;&#xA;&lt;h1&gt;引言&lt;/h1&gt;&#xA;&lt;p&gt;搬家了，不想再每天来回背笔记本电脑💻，就花了两天时间把实验室的电脑也装上 Arch Linux 了，并且配置好工作环境。&lt;/p&gt;&#xA;&lt;p&gt;这已经不是第一次尝试在实验室电脑上安装 Linux，以前尝试过 ubuntu linxu，因为不能清空 C 盘，也不能&#xA;经过那么多次安装之后，现在愈发熟练，对 Linux 的运行机制也更加清楚了。比如，这次安装就有一个特点，在两块硬盘上安装 Arch Linux，根目录挂载到固态硬盘，/home 挂在机械硬盘上。并且是 Arch Linux + Win10 的双系统。。&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div id=&#34;材料和方法&#34; class=&#34;section level1&#34;&gt;&#xA;&lt;h1&gt;材料和方法&lt;/h1&gt;&#xA;&lt;p&gt;软件清单&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;rp-pppoe # 拨号软件&lt;/li&gt;&#xA;&lt;li&gt;fcitx5 # 输入法&lt;/li&gt;&#xA;&lt;li&gt;zotero # 文献管理软件&lt;/li&gt;&#xA;&lt;li&gt;vscode # IDE&lt;/li&gt;&#xA;&lt;li&gt;R # 数据分析&lt;/li&gt;&#xA;&lt;li&gt;google-chrome # 浏览器&lt;/li&gt;&#xA;&lt;li&gt;folita # 电子书&lt;/li&gt;&#xA;&lt;li&gt;octopi # 图形化包管理&lt;/li&gt;&#xA;&lt;li&gt;octave # 编程+数据分析&lt;/li&gt;&#xA;&lt;li&gt;gedit # 文本编辑器，轻量 IDE&lt;/li&gt;&#xA;&lt;li&gt;vim # 编辑器&lt;/li&gt;&#xA;&lt;li&gt;qv2ray # 🪜&lt;/li&gt;&#xA;&lt;li&gt;goldenDict # 词典&lt;/li&gt;&#xA;&lt;li&gt;cups&amp;amp;hplip # 打印机&lt;/li&gt;&#xA;&lt;li&gt;geary # 邮件&lt;/li&gt;&#xA;&lt;li&gt;telegram # 即时通讯&lt;/li&gt;&#xA;&lt;li&gt;libreoffice # 文档编辑器&lt;/li&gt;&#xA;&lt;li&gt;Gimp # 图片处理工具&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Make VS Code to be a R IDE</title>
      <link>https://psy.afark.cn/post/six-pages/</link>
      <pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://psy.afark.cn/post/six-pages/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;集成开发环境的本质就是一个可执行命令的控制台和可编辑脚本的编辑器。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%E5%BC%95%E8%A8%80&#34;&gt;引言&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%E6%9D%90%E6%96%99%E5%92%8C%E6%96%B9%E6%B3%95&#34;&gt;材料和方法&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%E5%87%86%E5%A4%87&#34;&gt;准备&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%E6%B5%81%E7%A8%8B&#34;&gt;流程&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%E7%BB%93%E6%9E%9C&#34;&gt;结果&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%E6%80%BB%E7%BB%93&#34;&gt;总结&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;昨晚，忽然 RStudio 又不能输入中文了。即使用的是网上的解决办法 ── ibus。（现在 Archlinux Wiki 里已经有了标准的稳定的解决办法了）&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; 。我目前用 R 主要是用 Rmarkdown 编辑文档。这个问题出现，显然是致命一击。之前就被它不稳定的外网连接折磨，可以忍受，不能使用中文输入显然是不能接受的。&lt;/p&gt;&#xA;&lt;p&gt;我的 R 使用路线是，一窍不通，跟着以前认为 RStudio 是 R 唯一的 IDE。后来想通了，R 生态是基于 R-core 的一系列包的合集，即使是 RStudio 也是一组包的合集。&lt;/p&gt;&#xA;&lt;p&gt;按照这个思路。只要把自己需要的包配置好，即使不是 RStudio 也可以实现需求。&lt;/p&gt;&#xA;&lt;p&gt;几个需求：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;编辑 Rmarkdown&lt;/li&gt;&#xA;&lt;li&gt;使用 knitr 导出 html 或 pdf&lt;/li&gt;&#xA;&lt;li&gt;使用 blogdown 的全功能部署网站&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;材料和方法&#34;&gt;材料和方法&lt;/h2&gt;&#xA;&lt;h3 id=&#34;准备&#34;&gt;准备&lt;/h3&gt;&#xA;&lt;h3 id=&#34;流程&#34;&gt;流程&lt;/h3&gt;&#xA;&lt;h2 id=&#34;结果&#34;&gt;结果&lt;/h2&gt;&#xA;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;&#xA;&lt;p&gt;经过这样一顿折腾，对 R 包括 RStudio 的工作机制有了更深的理解&lt;/p&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/Fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#RStudio_%E4%B8%AD%E6%97%A0%E6%B3%95%E8%B0%83%E5%87%BA%E8%BE%93%E5%85%A5%E6%B3%95&#34;&gt;RStudio 中无法调出输入法&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>There were missing in making blog site by using blogdown</title>
      <link>https://psy.afark.cn/post/four-pages/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://psy.afark.cn/post/four-pages/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;当前的几大爱好，计算机、人像摄影、阅读、和运动。缺了哪一个都不行。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;今天在用 blogdown 结合 GitHub Pages 搭建博客的过程真是踩坑无数：&lt;/p&gt;&#xA;&lt;h2 id=&#34;安装-blogdown&#34;&gt;安装 blogdown&lt;/h2&gt;&#xA;&lt;p&gt;当时我是在 RStudio 的控制台中输入&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;install.packages&lt;/span&gt;(blogdown)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是一直装不上。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;先是早上因为依赖&lt;code&gt;promises&lt;/code&gt;装不上。 blogdown 装不上，通过 Arch Linux 的 yay 解决了。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fish&#34; data-lang=&#34;fish&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;yay&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;-S&lt;/span&gt; r-promises&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;然后是 RStudio 不能走代理，与 blogdown 库地址的连接时不时断线。最后在多次尝试之后，安装上了。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;现在回过头看，有另外两种办法可以避免这一问题。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 一是通过 AUR 安装 R 扩展包的方式来安装，其有更好的依赖管理，并且如果设置了镜像的话，就可以避免代理的问题。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yay -S r-blogdown&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 如果终端可以正常走代理的话，可以通过下面这种方式&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 在命令行 R 中进行安装。这样可以避免 RStudio 的代理设置问题。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;install.packages&lt;/span&gt;(blogdown)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装-hugo&#34;&gt;安装 hugo&lt;/h2&gt;&#xA;&lt;p&gt;采用 AUR 安装扩展包的方式的同学会发现，这一步可以跳过了。因为 AUR 安装依赖时，已经安装好 Hugo 了。&lt;/p&gt;&#xA;&lt;p&gt;采用 R 或 RStudio 安装的同学需要跟着进行操作，安装 Hugo。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blogdown&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;install_hugo&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个安装会连接到 yihui 的网站，但是因为 RStudio 连接外网不稳定的原因。国内的同学可能需要通过下面两种方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting Atom for GitHub Pages</title>
      <link>https://psy.afark.cn/post/two-pages/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://psy.afark.cn/post/two-pages/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;相比在一个大而全的基础上删减，我更喜欢这种在一个核心上加自己喜欢的东西。这是我喜欢 &lt;code&gt;Arch Linux&lt;/code&gt; 的原因，显然，在搭建博客上也是如此。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;学习如雪中前行，踩着前人留下的脚印，会让我们更加轻松和快速的到达目的地。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;在&lt;a href=&#34;https://JiangXY98.github.io/posts/firspages&#34;&gt;上篇文章&lt;/a&gt;中最后，提到使用 &lt;a href=&#34;http://atom.io&#34;&gt;Atom&lt;/a&gt; 进行网站的日常维护。&lt;/p&gt;&#xA;&lt;p&gt;这样做有几个好处：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Atom 是 GitHub 出品的编辑器，把 Git 整合到了软件之中。通过它，我们可以通过图形化的界面进行上传和同步，而无需记住那几行命令，在出错的时候，也会提示相应的解决办法，在对于 Git 新手还是相当重要的。&lt;/li&gt;&#xA;&lt;li&gt;现在， Atom 已经内置了 markdown 插件，具有实时渲染，语法纠正等功能，让博主能够把注意从格式专注到写作上，极大的提高写作的效率。并且插件仓库中还有数量丰富的插件可以下载使用，具有惊人的扩展性。&lt;/li&gt;&#xA;&lt;li&gt;Atom 是一个跨平台软件，也就是说，只要有网络，可以在世界上的大多数电脑上开始工作。设想这样一个场景，和女友约好看电影，到了后接到女友电话，她还有一个小时才能到。这时候你就可以进入旁边的网吧，熟练的配置梯子，然后装上 Atom，登录 GitHub 帐号，写上一篇文章。完美：）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;操作&#34;&gt;操作&lt;/h2&gt;&#xA;&lt;p&gt;安装，如果是 Arch Linux 可以在 Terminal 中执行&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S atom&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装后点击桌面图标，或者终端中执行 &lt;code&gt;atom&lt;/code&gt; 打开 Atom，首次安装我们可以看到如下界面。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Screenshot-20210811154323-1100x669.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;通过点击 &lt;code&gt;Open a Project&lt;/code&gt; 或 &lt;code&gt; Add folders&lt;/code&gt;。打开我们网站的本地库，如果库中包含 &lt;code&gt;.git&lt;/code&gt; 文件夹，Atom 会自动配置你的 GitHub 登录信息。相当方便。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Screenshot-20210811160220-1100x669.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;其实出场配置的 Atom 提供的功能已经满足了我们维护网站的所有需要：创建和编辑、美化、本地预览、上传与部署。为了更有效率的写作和部署博客，我们进行&lt;/p&gt;&#xA;&lt;p&gt;我们需要达到以下目的：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;markdown 的语法高亮、语法检查、实时预览（渲染）等功能；&lt;/li&gt;&#xA;&lt;li&gt;结合 jekyll 实现通过鼠标就能创建和发布文章；&lt;/li&gt;&#xA;&lt;li&gt;一个好看的界面 UI；&lt;/li&gt;&#xA;&lt;li&gt;通过这个过程了解 Atom 的基本操作。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;ui&#34;&gt;UI&lt;/h3&gt;&#xA;&lt;p&gt;作为一个 fresher ，配置一个软件，UI 是第一步，如果视觉上没有直观上改变，就不会觉察到配置了什么。本来已经失望，打算在使用中配置，但没想到随手发现的一篇&lt;a href=&#34;https://https://ricebai.github.io/2018/04/21/atom-github/&#34; title=&#34;Atom &amp;amp; GitHub&#34;&gt;博文&lt;/a&gt;讲了如何修改主题。然后又看到了官方推荐的 &lt;code&gt;atom-material-ui&lt;/code&gt; 用上之后，简直打开了新世界的大门。简直和 &lt;code&gt;GTK3&lt;/code&gt; 完美融合。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Make a blog site by using GitHub pages and Jekll</title>
      <link>https://psy.afark.cn/post/firspages/</link>
      <pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://psy.afark.cn/post/firspages/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;念头一起，就无法消失了，除了去做。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;这已经不是我第一次搭建博客了。&lt;/p&gt;&#xA;&lt;p&gt;去年疫情搭建梯子时，根据网上的教程，用租用的 VPS 和腾讯新人购买的域名搭建过一个博客网站。因为时间久远，甚至连采用的什么框架都忘了。&lt;/p&gt;&#xA;&lt;p&gt;后来因为用的机场恢复运营了，VPS 和域名的作用消失了，建站也就不了了之了。前两天域名到期提示续费的邮件让我想起“哦，我还玩过这个啊”。&lt;/p&gt;&#xA;&lt;p&gt;最近在用 Psychtoolbox 编实验程序，想找一个地方存放自己编写程序的过程，发现拥有一个博客最能满足需求。一是记录自己在做的事情，二是借此展示自己，看有无朋友愿意请我帮忙编写心理学实验程序。&lt;/p&gt;&#xA;&lt;p&gt;基于上述内容，于2021年7月30日，利用一天的时间，通过 Google 和查阅官方文档的方式，搭建了这个博客。本文讲述了两种方法。大家可以选择性的跳到自己需要板换阅读。&lt;/p&gt;&#xA;&lt;h2 id=&#34;材料和方法&#34;&gt;材料和方法&lt;/h2&gt;&#xA;&lt;h3 id=&#34;材料&#34;&gt;材料&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Arch Linux&lt;/li&gt;&#xA;&lt;li&gt;Google&lt;/li&gt;&#xA;&lt;li&gt;GitHub，本博客基于 GitHub Pages 和 Jekyll 所搭建。&lt;/li&gt;&#xA;&lt;li&gt;Jekyll&lt;/li&gt;&#xA;&lt;li&gt;Vim&lt;/li&gt;&#xA;&lt;li&gt;Atom&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;准备gitgithub-帐号&#34;&gt;准备：git、GitHub 帐号&lt;/h3&gt;&#xA;&lt;p&gt;整个搭建过程完全在Arch Linux 系统上完成。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;archie@arch ~ &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;master&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&amp;gt; neofetch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   -&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;                    archie@arch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  .o+&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;                   -----------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                 &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ooo/                   OS: Arch Linux x86_64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;+oooo:                  Host: TM1701&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;+oooooo:                 Kernel: 5.13.6-arch1-1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               -+oooooo+:                Uptime: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; hours, &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; mins&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/:-:++oooo+:               Packages: &lt;span style=&#34;color:#ae81ff&#34;&gt;1302&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pacman&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/++++/+++++++:              Shell: fish 3.3.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/++++++++++++++:             Resolution: 1920x1080&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/+++ooooooooooooo/&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;           DE: GNOME 40.3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         ./ooosssso++osssssso+&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;          WM: Mutter&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .oossssso-&lt;span style=&#34;color:#e6db74&#34;&gt;````&lt;/span&gt;/ossssss+&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;         WM Theme: Layan-light&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -osssssso.      :ssssssso.        Theme: Layan-light &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;GTK2/3&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      :osssssss/        osssso+++.       Icons: ePapirus &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;GTK2/3&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     /ossssssss/        +ssssooo/-       Terminal: gnome-terminal&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/ossssso+/:-        -:/+osssso+-     CPU: Intel i7-8550U &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; @ 4.000GHz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;+sso+:-&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;                 &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;.-/+oso:    GPU: Intel UHD Graphics &lt;span style=&#34;color:#ae81ff&#34;&gt;620&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;++:.                           &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;-/+/   GPU: NVIDIA GeForce MX150&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; .&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;                                 &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/   Memory: 2952MiB / 7837MiB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先安装 git ，终端输入：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
