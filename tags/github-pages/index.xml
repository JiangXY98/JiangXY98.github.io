<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitHub Pages on My Blog Site</title>
    <link>http://JiangXY98.github.io/tags/github-pages/</link>
    <description>Recent content in GitHub Pages on My Blog Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 03 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://JiangXY98.github.io/tags/github-pages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>采用 R 包 blogdown 和 GitHub Pages 搭建博客踩坑实录</title>
      <link>http://JiangXY98.github.io/posts/four-pages/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://JiangXY98.github.io/posts/four-pages/</guid>
      <description>当前的几大爱好，计算机、人像摄影、阅读、和运动。缺了哪一个都不行。
引言 今天在用 blogdown 结合 GitHub Pages 搭建博客的过程真是踩坑无数：
安装 blogdown 当时我是在 RStudio 的控制台中输入
install.packages(blogdown) 但是一直装不上。
先是早上因为依赖promises装不上。 blogdown 装不上，通过 Arch Linux 的 yay 解决了。 yay -S r-promises 然后是 RStudio 不能走代理，与 blogdown 库地址的连接时不时断线。最后在多次尝试之后，安装上了。 现在回过头看，有另外两种办法可以避免这一问题。
# 一是通过 AUR 安装 R 扩展包的方式来安装，其有更好的依赖管理，并且如果设置了镜像的话，就可以避免代理的问题。 yay -S r-blogdown # 如果终端可以正常走代理的话，可以通过下面这种方式 # 在命令行 R 中进行安装。这样可以避免 RStudio 的代理设置问题。 install.packages(blogdown) 安装 hugo 采用 AUR 安装扩展包的方式的同学会发现，这一步可以跳过了。因为 AUR 安装依赖时，已经安装好 Hugo 了。
采用 R 或 RStudio 安装的同学需要跟着进行操作，安装 Hugo。
blogdown::install_hugo() 这个安装会连接到 yihui 的网站，但是因为 RStudio 连接外网不稳定的原因。国内的同学可能需要通过下面两种方式。</description>
    </item>
    
    <item>
      <title>配置 Atom 以维护 GitHub Pages</title>
      <link>http://JiangXY98.github.io/posts/two-pages/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://JiangXY98.github.io/posts/two-pages/</guid>
      <description>相比在一个大而全的基础上删减，我更喜欢这种在一个核心上加自己喜欢的东西。这是我喜欢 Arch Linux 的原因，显然，在搭建博客上也是如此。
学习如雪中前行，踩着前人留下的脚印，会让我们更加轻松和快速的到达目的地。
引言 在上篇文章中最后，提到使用 Atom 进行网站的日常维护。
这样做有几个好处：
Atom 是 GitHub 出品的编辑器，把 Git 整合到了软件之中。通过它，我们可以通过图形化的界面进行上传和同步，而无需记住那几行命令，在出错的时候，也会提示相应的解决办法，在对于 Git 新手还是相当重要的。 现在， Atom 已经内置了 markdown 插件，具有实时渲染，语法纠正等功能，让博主能够把注意从格式专注到写作上，极大的提高写作的效率。并且插件仓库中还有数量丰富的插件可以下载使用，具有惊人的扩展性。 Atom 是一个跨平台软件，也就是说，只要有网络，可以在世界上的大多数电脑上开始工作。设想这样一个场景，和女友约好看电影，到了后接到女友电话，她还有一个小时才能到。这时候你就可以进入旁边的网吧，熟练的配置梯子，然后装上 Atom，登录 GitHub 帐号，写上一篇文章。完美：） 操作 安装，如果是 Arch Linux 可以在 Terminal 中执行
sudo pacman -S atom 安装后点击桌面图标，或者终端中执行 atom 打开 Atom，首次安装我们可以看到如下界面。
通过点击 Open a Project 或 Add folders。打开我们网站的本地库，如果库中包含 .git 文件夹，Atom 会自动配置你的 GitHub 登录信息。相当方便。
其实出场配置的 Atom 提供的功能已经满足了我们维护网站的所有需要：创建和编辑、美化、本地预览、上传与部署。为了更有效率的写作和部署博客，我们进行
我们需要达到以下目的：
markdown 的语法高亮、语法检查、实时预览（渲染）等功能； 结合 jekyll 实现通过鼠标就能创建和发布文章； 一个好看的界面 UI； 通过这个过程了解 Atom 的基本操作。 UI 作为一个 fresher ，配置一个软件，UI 是第一步，如果视觉上没有直观上改变，就不会觉察到配置了什么。本来已经失望，打算在使用中配置，但没想到随手发现的一篇博文讲了如何修改主题。然后又看到了官方推荐的 atom-material-ui 用上之后，简直打开了新世界的大门。简直和 GTK3 完美融合。</description>
    </item>
    
    <item>
      <title>使用 GitHub pages 和 Jekll 搭建博客</title>
      <link>http://JiangXY98.github.io/posts/firspages/</link>
      <pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>http://JiangXY98.github.io/posts/firspages/</guid>
      <description>念头一起，就无法消失了，除了去做。
引言 这已经不是我第一次搭建博客了。
去年疫情搭建梯子时，根据网上的教程，用租用的 VPS 和腾讯新人购买的域名搭建过一个博客网站。因为时间久远，甚至连采用的什么框架都忘了。
后来因为用的机场恢复运营了，VPS 和域名的作用消失了，建站也就不了了之了。前两天域名到期提示续费的邮件让我想起“哦，我还玩过这个啊”。
最近在用 Psychtoolbox 编实验程序，想找一个地方存放自己编写程序的过程，发现拥有一个博客最能满足需求。一是记录自己在做的事情，二是借此展示自己，看有无朋友愿意请我帮忙编写心理学实验程序。
基于上述内容，于2021年7月30日，利用一天的时间，通过 Google 和查阅官方文档的方式，搭建了这个博客。本文讲述了两种方法。大家可以选择性的跳到自己需要板换阅读。
材料和方法 材料 Arch Linux Google GitHub，本博客基于 GitHub Pages 和 Jekyll 所搭建。 Jekyll Vim Atom 准备：git、GitHub 帐号 整个搭建过程完全在Arch Linux 系统上完成。
archie@arch ~ (master)&amp;gt; neofetch -` archie@arch .o+` ----------- `ooo/ OS: Arch Linux x86_64 `+oooo: Host: TM1701 `+oooooo: Kernel: 5.13.6-arch1-1 -+oooooo+: Uptime: 4 hours, 51 mins `/:-:++oooo+: Packages: 1302 (pacman) `/++++/+++++++: Shell: fish 3.3.1 `/++++++++++++++: Resolution: 1920x1080 `/+++ooooooooooooo/` DE: GNOME 40.</description>
    </item>
    
  </channel>
</rss>
