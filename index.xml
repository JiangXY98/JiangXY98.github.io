<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xiaoyu Jiang | 姜小宇</title>
    <link>http://psy.afark.cn/</link>
    <description>Recent content on Xiaoyu Jiang | 姜小宇</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 14 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://psy.afark.cn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>自编雅思口语素材（Part2）</title>
      <link>http://psy.afark.cn/post/2024-11-14-speaking/</link>
      <pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/2024-11-14-speaking/</guid>
      <description>经过一次考试之后，感觉雅思口语的考试相对模糊。从考生的视角来看，就是进到小房间里和一个外国人说十多分钟的话。只要会说话，能交流，基本就是5分以上的成绩了。当然，想要更高的成绩的话，就需要非常扎实的基本功和丰富的用英语交流的经验了。
对于Part1来说，重点是流利度，锻炼好基本功，保证说出的句子没有错误即可。答案结构为“回答+两句解释”。需要勤加练习，反应迅速。不用单独准备素材，回答所需的素材从为Part2准备的资料中提取即可。
对于Part2来说，六大类素材，结合自身经历编写，通过“串题”技巧应对各类题目。
最喜欢的东西：书、电影或者网站 人物：一个名人、一个家庭成员 活动：关于爱好的话题、日常的一天、生日或节日怎么过 地点：在哪生活？旅游过的地方？ 物品：经常使用的物品？想买的东西？收到的礼物？ 事件：一个节日、一个庆祝活动等 “串题”是一种技巧，需要反复练习才会熟练。
这部分是展现口语能力，无须涵盖话题卡上的所有信息点，注重答案本身的逻辑性和结构，表示自己具有用英文交流的能力。
提高答案质量的重要方法是增加细节，举例子。不知道说什么的时候就说“For example”，这个是个有魔力的短语，在说完之后，大脑会逼着自己想出东西的。
减少抽象的高谈阔论，增加具体的细节和技巧。
Part2答案的结构：Intro, what, why, example
最喜欢的东西 电脑、汽车、自行车、《死侍》、抖音
电影《死侍》
There are many things I like, but the one that stands out the most is the the movie Deadpool.
Deadpool is a comedy film that combines superhero elements with a lot of humor. It’s known for its witty and sarcastic dialogue, especially the main character’s sarcastic remarks, which always make me laugh.</description>
    </item>
    
    <item>
      <title>自编雅思写作结构</title>
      <link>http://psy.afark.cn/post/2024-11-13-rmd/</link>
      <pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/2024-11-13-rmd/</guid>
      <description>理论 立场明确，同时适当提及反面观点（Some people argue that或Critics may say that），在呈现反面观点后，对其进行驳斥（However或On the other hand）。这样，文章有4段就可以达到字数要求了。
引言段：改写题目（According to或It is evident that）。如果是观点题，要说明题目中的观点（some argue that）。表明立场（I believe that或I support the idea that） 主体段1：提出支持的观点（Firstly或To begin with）。解释（The main advantage/reason of……is that……）。举例（For instance，）。论证（This demonstrates that）。 主体段2：第二个支持的观点（Moreover,）。提出反面的观点（Some people also argue that或Critics may say that）。简要分析（For instance，）。驳斥（however, this view overlooks the fact that或on the other hand, it fails to consider that）。给出自己的看法（Given this, ）。 结论段：In conclusion, while it is undeniable that反方合理之处，it is clear that重申立场并总结。 范文案例 题目 Many things can influence the academic achievement and emotional growth of a student.</description>
    </item>
    
    <item>
      <title>Rmarkdown 并不适合写论文</title>
      <link>http://psy.afark.cn/post/rorrmarkdown/</link>
      <pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/rorrmarkdown/</guid>
      <description>Rmarkdown 的目标是生成一个有文字有图像的数据分析文档，保持数据分析和文章写作的流畅。然而，在实际操作中，由于个体所处环境的限制。这个目标很难完美实现。
实际的科研路线是阅读文献、提出想法、设计实验、完成实验、分析数据、写成初稿，最后是反复多次的审阅和修改。对比这个路线就会发现，数据分析实际只占主体内容的一小部分，而且在正文中几乎不会有代码的出现。另外，在审阅过程中，需要和导师或者合作者多次沟通，这在事业起步阶段，显然需要自己配合他人，而不是期望对方兼容自己。这个时候，更为流行的 Word 显然更能胜任论文写作的工作。
相比于各种文字处理软件和标记语言，Rmarkdown 类似于 Markdown 一样的便捷的标记和导出即好看样式处理，以及融合了R 代码和输出结果的强大功能。显得似乎很强大，但只能用在自己写数据分析报告和写博客上。
而在数据处理上，显然R脚本文件也比Rmarkdown更合适。因为，采用代码进行数据分析的一大目标就是，就是期待数据分析自动化，和数据分析代码的可重复利用，在这方面Rmarkdown 比不上可以自动运行的脚本文件。另外，文本和代码结合的方式，使得数据分析员更容易在分析过程中对结果进行解释，但这实际上是一个重复性工作，因为关于数据的解释，完全应该放在论文的初稿中。
对于 R 的使用，应该更像使用 MATLAB 一样，写出可以输出结果的脚本文件。一个项目由一个解释文档，一个主脚本，和数量相当，功能单一的支线函数脚本组成。这样在后期需要的时候，修改必要的几个参数，就能够重新投入使用。
在现代的编程语言中使用自定义函数，优点是代码复用、模块化设计。在编程时，把编程任务分解成小的模块，每个模块用一个函数实现，便于理解每个模块的作用，降低了程序复杂性，使得程序容易管理。
采用这样的方式进行数据分析，也是真正实现函数化编程。
总结，用 R 做数据分析，用 Word 写论文，用 Rmarkdown 写技术博客。</description>
    </item>
    
    <item>
      <title>局域网共享代理</title>
      <link>http://psy.afark.cn/post/proxy/</link>
      <pubDate>Tue, 07 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/proxy/</guid>
      <description>在很多时候，局域网内实现共享代理是很重要的，比如刷欧版系统后的启动验证，还有绕过代理服务商的用户数量限制，实现多台机器共用同一个账户。
第一步，PC 或 Android 设备的 V2rayN 或其他代理软件上打开允许局域网设置
第二步，需要用网的 Android 机的 wifi 高级设置，Proxy 选项
第三步，选择手动，填写第一步中设备的 IP 地址，和 V2rayN 上的 http 端口号
完工</description>
    </item>
    
    <item>
      <title>选择的迷茫</title>
      <link>http://psy.afark.cn/post/xrze/</link>
      <pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/xrze/</guid>
      <description>我的人生目标，攫取金钱？不，应当是追求自我的成长，其中包括人格的完善，知识的增加，见闻的增加。至于金钱和伴侣不应当成为主要目标。金钱再重要，满足生活所需即可；伴侣找一个知心人就好。只有自我的成长才是永无止境的。
人生的歧途不是没有选择，而是被众多选项迷惑了心智，不能在做出选择之后坚定地走下去。其实能够让自己陷入决策困境的选项之间基本都得失相平，只要坚定地走下去都大差不差。一个相当悲观的原因就是，人生太过短暂，没有走到终点的可能。
与读博相比，像阿黄一样找个工作似乎是不错，拿着不错的工资，逐渐解开束缚在身上的金钱枷锁。与之相比，读博反而像是一个欠佳的选择，金钱枷锁依旧，毕业后也不一定能找到更好的工作。随着经济和运势的变化，甚至可能比不上当下能找到的工作。但它代表的是一个机会，在认识自己、增广见闻的道路上走的更远的机会。
谈钱从来不寒碜，但钱应该也是工具而不是目标，至于目标是什么，可以是任何东西。 ——于淼</description>
    </item>
    
    <item>
      <title>近况分析:2022-10-25</title>
      <link>http://psy.afark.cn/journals/2022_10_26/</link>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/journals/2022_10_26/</guid>
      <description>罗列近期做成的事情，失败的事情，以及搁置的事情。然后，分析得失与未来发展方向。
2022-10-25 星期二 永远相信美好的事情即将发生，Enjoy! 19: 20
💪🏻 Todo List First tabstop, A seconde tabstop, A third tabstop, 📦 收获 —Text Here—
🛫 之后可能要做的事情 What did I do 推迟到之后的内容 </description>
    </item>
    
    <item>
      <title>The plan to improve my English</title>
      <link>http://psy.afark.cn/post/ielts/</link>
      <pubDate>Mon, 20 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/ielts/</guid>
      <description>白天的时候，把晚上需要朗读的材料整理到一张纸上打印出来，然后下班后反复诵读。内容包括：不认识的单词，提取的句子、固定搭配，听力材料。
这样总的来说，白天是写作和阅读，晚上是口语和朗读，早上是听力。主干是这些任务，其他时间是要听课、ANKI、或者看书。
很多句子就是那样翻译的，是没有道理的，无须多想，记下便是，记得多了自然就懂了。
重点看剑桥雅思4-17（真题）、Simon 系列和九分达人。
阅读和写作是一体两面的，对于阅读，第一个月内先不管做题，唯一的工作就是阅读文章，分析文章结构，识别文章观点、论点、事实、论据，提取好的句子结构并进行仿写，提取词伙并记忆。听课和看书，了解什么是好文章、好句子、词伙，以及如何分析文章，如何造句。找到材料了，刘洪波的雅思阅读真经。总共56篇，一天两篇。
听力和口语是一体两面的，同样的，第一个月先不做题，工作是记单词，听写单词，跟读电影或者语料库。
备考雅思的路子多，但唯一不变的是至少在考前一段时间内，持续的输入与输出，适应这种考试形式。听、说、读、写在一个学习共同体中。
你听力收获的句式与词汇，阅读收获的文章结构，甚至练口语时收获的话题，都可以作为复习雅思的尚好材料，不断整理在自己的雅思资料库中。
每个人的英语基础、学习情况都相差很多，故复习时间不能一概而论。但是，按照一套雅思试卷来看，听力 40 分钟，阅读 60 分钟，写作 60 分钟。口语 15-25 分钟，除了做题，还要核对答案和修改总结，至少需要花费 4 个小时的时间。平时还需要做一些积累，比如背单词和背作文素材，一天没有 5 个小时的时间是不行的。
早上记忆力比较好，可以背单词和做听力，下午集中精力写作，晚上攻克阅读。当然，具体怎么安排，大家可以根据自己的实际情况，不过，雅思要想达到 7.0 的成绩，至少需要 2 个月，每天 5 小时的时间投入。</description>
    </item>
    
    <item>
      <title>Views about learning Psychtoolbox3</title>
      <link>http://psy.afark.cn/post/ptbstudy/</link>
      <pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/ptbstudy/</guid>
      <description>没有什么鸡血要干，没有那么多时间躺平。有的只是做好想做的事情。
8月31日，开始看两本 PTB 教材：《心理学研究方法-基于 MATLAB 和 Psychtoolbox》和《Psychtoolbox 工具箱及 MATLAB 编程实例》。这也是国内仅有的两本中文PTB教材。由此也可见 PTB 是个小众心理实验编程工具，并且正🈶被Psychopy （源自同一团队）取而代之的趋势。
但，并不是说现在学 PTB 就是49年投国军了。首先，PTB的功能更全面灵活，其次，无论是上个月写程序，还是这几天系统学习，都感觉到 PTB 语法的友善。其三，PTB3拥有多年的发展史，对于很多功能的实现，网上都有现成的脚本，稍微修改就能用到自己的实验中。至于性能上的差别，因为我不是程序员，所以还没对三者进行过比较（PTB、Psychopy、E-prime）。
而，对于这两本教材。怎么说呢，感慨就已经不是各有优点的问题了。两个都没有讲到自己找的东西。心理学实验编程的逻辑，比如，开始是什么样，中间要有什么，结束时数据保存为什么格式。还有实验设计的注意事项，比如，怎么编程可以让实验的运行效率更快，什么操作会损害时间精度应该避免等。
前一本书稍微提了下实验设计的逻辑：1) 设计实验试次;2) 编写实验刺激; 3) 呈现实验刺激; 4) 输出实验结果。但在其后的章节中，是一点都没有详谈的意思啊。
而后一本书，是苏州大学冯成志老师编著的一本书。是的，我用得是‘编著’两个字。里面很大的篇幅是对PTB帮助文档的筛选翻译，有用，但显然不是读者想从教材中看到的东西。读者，至少我这个读者想看到更多的是，作者使用这些函数的经验，而不是中文解释，毕竟到这个层次了，大家的英文水平都足以看懂帮助文档了。
幸好的是，冯老师这本书在第九章之后，就是正菜了。个人拙见，冯老师完全可以砍掉前面几章，取而代之，在第九章的中的编程实例中佐以更详细的注释。让读者得以统一的学习实验逻辑，可代码实现。而不会被淹没在前几章的函数海洋中。
当然，书已经出来那么多年了，改是不可能改了，我们只能适应。我建议读者在看完前四章之后，就可以跳到第九章，结合 MATLAB 和 PTB 自带的帮助文档，跟着读一遍。就能看到编程能力的显著增加。
无论如何，冯老师这本书是国内PTB学习者绕不过的一本书，加油啃吧，早啃完，早做自己的实验。</description>
    </item>
    
    <item>
      <title>August summary and future work tone</title>
      <link>http://psy.afark.cn/post/august/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/august/</guid>
      <description>极大的失望啊，自从上次说过每周三进行一次详细回顾。就再也没打开过日记本了。
过去一个月，魔幻般的生活。
然后，花了一点时间，把博客搭建起来了。这次是带有目的的，其中一个就是作为自我展示的地方。为以后读博或出去交流提供一个别人了解自己的窗口。
准确来说，八月好像就干了这些。
然后，给实验室的电脑装上了 Arch Linux。去了熊猫基地，看到了心喜的小浣熊。在最后两天编写了数据分析程序（未完成）。
对了，还看完了《城堡》《黑客与画家》。还没看完《深度工作》，但深受启发。专注工作，刻意练习，快速掌握复杂技能的能力，做出成果，形成规模的重要性。
《深度工作》最有启发的一点就是，只有成果才能代表一个人的才智。如果一个人什么都没做出来，然后说自己很有能力，谁会信呢？
但又一个把不能忽视的事实，就是我的记忆力相当的差，特别是情绪记忆。如果不做出成果，或者形成肌肉记忆，我甚至连过去发生了什么都不会记得。然后，注意力也很容易受干扰，经常被不重要或者其他事情吸引，不能坚持在一件事情上直到做出成果。
基于此，一定要在显眼的地方写明每天要做的事情，在这些事情完成前不允许做其他事情，无论它有多么重要。如此重复，才能出成果。有些是坚持半年以上才能看出效果的（如英语、），有些是需要短期内专注做完的（如编程、写作），有些是对身体健康非常重要但一年以上才有效果的（如健身，读书）。但这些有个共同点，那就是一定要做，并且在完成前不能中断。即，一天只做必须做得事情，其他的都滚开。
另外，要保持对知识的渴望。要怀着不能让任何一本书（一项技能）活到第二天的狠劲去干。拖拖拉拉的像什么样子。
有什么事是必须做的呢，编程和数据分析能力的提升，英语，综述，锻炼。这些永远出现在计划表上的事情，也确实是最重要，能持续带来好处的东西。
具体来说就是，编程是不断写程序（看书➡️复写经典实验➡️写博文➡️提供服务）、数据分析是不断分析数据（看书➡️分析自己的数据➡️分析公开数据➡️写博文➡️提供服务），英语是不断输出（背单词➡️练音标➡️背课文➡️复述➡️写作➡️说），锻炼就是不断升级。编程、数据分析、和英语都是服务于做科研的，之间不能割裂。比如，编程和数据分析在看完中文教程后，就要去看英文材料，并且在研究领域内选择。
深度工作提出的一个重要原则就是“专注”，做到这点不难，怀着对知识的渴望即可。并且，每次做都要出成果才停止。比如，看文献就要写出一个片段才能停止，编程就要写出一个能运行的程序才能停止，数据分析就要分析出结果，背文章就要背下来才能停。即任务开始前定下一个目标，然后怀着不完成不吃饭不睡觉的心态去干。除此之外，每次任务完成都要写个总结放在博客中。这样才算真正完成。
当然，这样状态去干，肯定要对自己有所奖励。每次任务完成后，都可以休息半天，然后去锻炼，而后奖励自己一顿大餐或旅行（任务重要性与完成情况决定价钱与距离）。奖励定下来了，干到恶心也要做下去。</description>
    </item>
    
    <item>
      <title>My Arch Linux PC</title>
      <link>http://psy.afark.cn/post/restart/</link>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/restart/</guid>
      <description> 引言 搬家了，不想再每天来回背笔记本电脑💻，就花了两天时间把实验室的电脑也装上 Arch Linux 了，并且配置好工作环境。
这已经不是第一次尝试在实验室电脑上安装 Linux，以前尝试过 ubuntu linxu，因为不能清空 C 盘，也不能 经过那么多次安装之后，现在愈发熟练，对 Linux 的运行机制也更加清楚了。比如，这次安装就有一个特点，在两块硬盘上安装 Arch Linux，根目录挂载到固态硬盘，/home 挂在机械硬盘上。并且是 Arch Linux + Win10 的双系统。。
材料和方法 软件清单
rp-pppoe # 拨号软件 fcitx5 # 输入法 zotero # 文献管理软件 vscode # IDE R # 数据分析 google-chrome # 浏览器 folita # 电子书 octopi # 图形化包管理 octave # 编程+数据分析 gedit # 文本编辑器，轻量 IDE vim # 编辑器 qv2ray # 🪜 goldenDict # 词典 cups&amp;amp;hplip # 打印机 geary # 邮件 telegram # 即时通讯 libreoffice # 文档编辑器 Gimp # 图片处理工具 </description>
    </item>
    
    <item>
      <title>To travel the Panda Zoo</title>
      <link>http://psy.afark.cn/post/cdpanda/</link>
      <pubDate>Fri, 20 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/cdpanda/</guid>
      <description>9：20出发，进入阳光甚好，美滋滋~
MVIMG_20210820_092148.jpg 坐在公交车🚌上，看着内外的美女们，这才是生活该有的样子啊。
好吧，出师不利，上了反方向的车了😯。过了n久打开导航才发现。不过，这里好安逸啊，树木茂盛，绿意盎然。
FIMO_1629423664063.JPG 下车，重新上车，出发！Go 👆
FIMO_1629424391186.JPG 再次听到川师南大门的报站声🤣
FIMO_1629424599098.JPG 转车，下了 k19，转655。今天阴天⛅，空气很凉爽。中午了，路边还有跳广场舞的大爷大妈。
FIMO_1629427786578.JPG 然后做了短短的几站路，心情有点激动啊。到了！
FIMO_1629428874956.JPG 不亏是熊猫基地附近，这里的每家店都带着满满的熊猫元素。不过人好少啊,是中午的原因吗。
FIMO_1629429025838 满满的走到了基地门口，买票，扫码，测体温。离熊猫有近了一步哈哈。哪里的都有水雾装置，和夏天很搭配。
FIMO_1629429736650 哇！看到熊猫了！！！ 好可爱。
photo_2021-08-20_19-29-40 还有更多！
photo_2021-08-20_19-29-32 哈哈哈哈，人少，不热，还能看到🐼，真是太好了。而且还有小熊猫。提问，小熊猫是熊猫吗？
一直看不到小熊猫 😩。
哇，总算看到了。一只趴在树上，一动不动。。。可惜拍不到。还有一只，太萌了。
photo_2021-08-20_19-29-53.jpg 好羡慕保安大叔啊，每天都能看到熊猫🐼，还有工资的生活只应天上有吧。
MVIMG_20210820_132844 2：50 游玩结束。腿有点酸啊。
FIMO_1629442172893 出去玩确实有点累啊，休息去了。拜拜~👋🏻</description>
    </item>
    
    <item>
      <title>Make VS Code to be a R IDE</title>
      <link>http://psy.afark.cn/post/six-pages/</link>
      <pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/six-pages/</guid>
      <description>集成开发环境的本质就是一个可执行命令的控制台和可编辑脚本的编辑器。
Table of Contents 引言 材料和方法 准备 流程 结果 总结 引言 昨晚，忽然 RStudio 又不能输入中文了。即使用的是网上的解决办法 ── ibus。（现在 Archlinux Wiki 里已经有了标准的稳定的解决办法了）1 。我目前用 R 主要是用 Rmarkdown 编辑文档。这个问题出现，显然是致命一击。之前就被它不稳定的外网连接折磨，可以忍受，不能使用中文输入显然是不能接受的。
我的 R 使用路线是，一窍不通，跟着以前认为 RStudio 是 R 唯一的 IDE。后来想通了，R 生态是基于 R-core 的一系列包的合集，即使是 RStudio 也是一组包的合集。
按照这个思路。只要把自己需要的包配置好，即使不是 RStudio 也可以实现需求。
几个需求：
编辑 Rmarkdown 使用 knitr 导出 html 或 pdf 使用 blogdown 的全功能部署网站 材料和方法 准备 流程 结果 总结 经过这样一顿折腾，对 R 包括 RStudio 的工作机制有了更深的理解
RStudio 中无法调出输入法&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>There were missing in making blog site by using blogdown</title>
      <link>http://psy.afark.cn/post/four-pages/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/four-pages/</guid>
      <description>当前的几大爱好，计算机、人像摄影、阅读、和运动。缺了哪一个都不行。
引言 今天在用 blogdown 结合 GitHub Pages 搭建博客的过程真是踩坑无数：
安装 blogdown 当时我是在 RStudio 的控制台中输入
install.packages(blogdown) 但是一直装不上。
先是早上因为依赖promises装不上。 blogdown 装不上，通过 Arch Linux 的 yay 解决了。 yay -S r-promises 然后是 RStudio 不能走代理，与 blogdown 库地址的连接时不时断线。最后在多次尝试之后，安装上了。 现在回过头看，有另外两种办法可以避免这一问题。
# 一是通过 AUR 安装 R 扩展包的方式来安装，其有更好的依赖管理，并且如果设置了镜像的话，就可以避免代理的问题。 yay -S r-blogdown # 如果终端可以正常走代理的话，可以通过下面这种方式 # 在命令行 R 中进行安装。这样可以避免 RStudio 的代理设置问题。 install.packages(blogdown) 安装 hugo 采用 AUR 安装扩展包的方式的同学会发现，这一步可以跳过了。因为 AUR 安装依赖时，已经安装好 Hugo 了。
采用 R 或 RStudio 安装的同学需要跟着进行操作，安装 Hugo。
blogdown::install_hugo() 这个安装会连接到 yihui 的网站，但是因为 RStudio 连接外网不稳定的原因。国内的同学可能需要通过下面两种方式。</description>
    </item>
    
    <item>
      <title>Setting Atom for GitHub Pages</title>
      <link>http://psy.afark.cn/post/two-pages/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/two-pages/</guid>
      <description>相比在一个大而全的基础上删减，我更喜欢这种在一个核心上加自己喜欢的东西。这是我喜欢 Arch Linux 的原因，显然，在搭建博客上也是如此。
学习如雪中前行，踩着前人留下的脚印，会让我们更加轻松和快速的到达目的地。
引言 在上篇文章中最后，提到使用 Atom 进行网站的日常维护。
这样做有几个好处：
Atom 是 GitHub 出品的编辑器，把 Git 整合到了软件之中。通过它，我们可以通过图形化的界面进行上传和同步，而无需记住那几行命令，在出错的时候，也会提示相应的解决办法，在对于 Git 新手还是相当重要的。 现在， Atom 已经内置了 markdown 插件，具有实时渲染，语法纠正等功能，让博主能够把注意从格式专注到写作上，极大的提高写作的效率。并且插件仓库中还有数量丰富的插件可以下载使用，具有惊人的扩展性。 Atom 是一个跨平台软件，也就是说，只要有网络，可以在世界上的大多数电脑上开始工作。设想这样一个场景，和女友约好看电影，到了后接到女友电话，她还有一个小时才能到。这时候你就可以进入旁边的网吧，熟练的配置梯子，然后装上 Atom，登录 GitHub 帐号，写上一篇文章。完美：） 操作 安装，如果是 Arch Linux 可以在 Terminal 中执行
sudo pacman -S atom 安装后点击桌面图标，或者终端中执行 atom 打开 Atom，首次安装我们可以看到如下界面。
通过点击 Open a Project 或 Add folders。打开我们网站的本地库，如果库中包含 .git 文件夹，Atom 会自动配置你的 GitHub 登录信息。相当方便。
其实出场配置的 Atom 提供的功能已经满足了我们维护网站的所有需要：创建和编辑、美化、本地预览、上传与部署。为了更有效率的写作和部署博客，我们进行
我们需要达到以下目的：
markdown 的语法高亮、语法检查、实时预览（渲染）等功能； 结合 jekyll 实现通过鼠标就能创建和发布文章； 一个好看的界面 UI； 通过这个过程了解 Atom 的基本操作。 UI 作为一个 fresher ，配置一个软件，UI 是第一步，如果视觉上没有直观上改变，就不会觉察到配置了什么。本来已经失望，打算在使用中配置，但没想到随手发现的一篇博文讲了如何修改主题。然后又看到了官方推荐的 atom-material-ui 用上之后，简直打开了新世界的大门。简直和 GTK3 完美融合。</description>
    </item>
    
    <item>
      <title>Make a blog site by using GitHub pages and Jekll</title>
      <link>http://psy.afark.cn/post/firspages/</link>
      <pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>http://psy.afark.cn/post/firspages/</guid>
      <description>念头一起，就无法消失了，除了去做。
引言 这已经不是我第一次搭建博客了。
去年疫情搭建梯子时，根据网上的教程，用租用的 VPS 和腾讯新人购买的域名搭建过一个博客网站。因为时间久远，甚至连采用的什么框架都忘了。
后来因为用的机场恢复运营了，VPS 和域名的作用消失了，建站也就不了了之了。前两天域名到期提示续费的邮件让我想起“哦，我还玩过这个啊”。
最近在用 Psychtoolbox 编实验程序，想找一个地方存放自己编写程序的过程，发现拥有一个博客最能满足需求。一是记录自己在做的事情，二是借此展示自己，看有无朋友愿意请我帮忙编写心理学实验程序。
基于上述内容，于2021年7月30日，利用一天的时间，通过 Google 和查阅官方文档的方式，搭建了这个博客。本文讲述了两种方法。大家可以选择性的跳到自己需要板换阅读。
材料和方法 材料 Arch Linux Google GitHub，本博客基于 GitHub Pages 和 Jekyll 所搭建。 Jekyll Vim Atom 准备：git、GitHub 帐号 整个搭建过程完全在Arch Linux 系统上完成。
archie@arch ~ (master)&amp;gt; neofetch -` archie@arch .o+` ----------- `ooo/ OS: Arch Linux x86_64 `+oooo: Host: TM1701 `+oooooo: Kernel: 5.13.6-arch1-1 -+oooooo+: Uptime: 4 hours, 51 mins `/:-:++oooo+: Packages: 1302 (pacman) `/++++/+++++++: Shell: fish 3.3.1 `/++++++++++++++: Resolution: 1920x1080 `/+++ooooooooooooo/` DE: GNOME 40.</description>
    </item>
    
  </channel>
</rss>
